# -*- coding: utf-8 -*-
"""Image_to_image_Generation_Using_Pipeline_from_Hugging Face.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/inuwamobarak/stable-diffusion/blob/main/Image_to_image_Generation_Using_Pipeline_from_Hugging%C2%A0Face.ipynb

# Image-to-image Generation Using Pipeline from Hugging Face
By applying certain modern state-of-the-art techniques known as stable diffusion models, it is possible to generate images, audio, and even 3D structures of molecules. Stable diffusion works by modifying input data with the guide of text prompt and generating new creative output data.

## Importing Dependencies
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install --quiet --upgrade diffusers transformers scipy ftfy

# Commented out IPython magic to ensure Python compatibility.
# %pip install --quiet --upgrade accelerate

import torch # for backend
import requests # for internet access
from PIL import Image # regular python library for image processing

from diffusers import StableDiffusionDepth2ImgPipeline # Hugging face pipeline

#  Creating a variable instance of the pipeline
pipe = StableDiffusionDepth2ImgPipeline.from_pretrained(
    "stabilityai/stable-diffusion-2-depth",
    torch_dtype=torch.float16,
)
pipe.to("cuda") #  Assigning to GPU

"""## Preparing Image Data"""

# Accesssing images from the web
import urllib.parse as parse
import os
import requests
# Verify url
def check_url(string):
    try:
        result = parse.urlparse(string)
        return all([result.scheme, result.netloc, result.path])
    except:
        return False

# Load an image
def load_image(image_path):
    if check_url(image_path):
        return Image.open(requests.get(image_path, stream=True).raw)
    elif os.path.exists(image_path):
        return Image.open(image_path)

"""# Loading Image"""

img = load_image("https://img.freepik.com/free-photo/stacked-tomatoes_1353-262.jpg?w=740&t=st=1683821147~exp=1683821747~hmac=708f16371d1e158d76c8ea5e8b9790fb68dc75009750b8328e17c21f16d36468")
img

"""# Creating Text Prompts"""

prompt = "Some sliced tomatoes mixed"
pipe(prompt=prompt, image=img, negative_prompt=None, strength=0.7).images[0]

"""# Creating negative Prompts"""

img = load_image("https://img.freepik.com/free-photo/stacked-tomatoes_1353-262.jpg?w=740&t=st=1683821147~exp=1683821747~hmac=708f16371d1e158d76c8ea5e8b9790fb68dc75009750b8328e17c21f16d36468")
img

prompt = ""
n_prompt = "rot, bad, decayed, wrinkled"
pipe(prompt=prompt, image=img, negative_prompt=n_prompt, strength=0.7).images[0]

"""# Adjusting diffusion level

At strength = 0.1
"""

prompt = ""
n_prompt = "rot, bad, decayed, wrinkled"
pipe(prompt=prompt, image=img, negative_prompt=n_prompt, strength=0.1).images[0]

"""At strength = 0.4"""

prompt = ""
n_prompt = "rot, bad, decayed, wrinkled"
pipe(prompt=prompt, image=img, negative_prompt=n_prompt, strength=0.4).images[0]

"""At strength = 1.0"""

prompt = ""
n_prompt = "rot, bad, decayed, wrinkled"
pipe(prompt=prompt, image=img, negative_prompt=n_prompt, strength=1.0).images[0]

